package com.designpatterns.strategypattern;

/**
 * 策略模式：
 *    其思想是针对一组策略，将每一种策略都封装到具有共同接口的独立的类中，从而是它们可以相互替换。
 * 特点：
 *    策略模式体现了面向对象程序设计中非常重要的两个原则：
 *      1、封装变化的概念。
 *      2、编程中使用接口，而不是使用的是具体的实现类(面向接口编程)。
 * 角色：
 *      1、抽象策略角色（接口）
 *      2、具体策略角色（实现类）
 *      3、环境角色 内部成员变量包含抽象角色的引用
 */

/**
 * 定义抽象策略角色
 */
public interface Strategy {
    int count(int a, int b);
}
